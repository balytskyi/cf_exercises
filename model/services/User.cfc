component accessors=true {

    function init(beanFactory) {
        variables.beanFactory = beanFactory;

		var queryService = new query();
		queryService.execute(sql="CREATE TABLE IF NOT EXISTS users (id int NOT NULL GENERATED BY DEFAULT AS IDENTITY, userName varchar(30) NOT NULL, dob varchar(30) NOT NULL, houseNum int NOT NULL, postCode int NOT NULL, street varchar(30), city varchar(30), PRIMARY KEY (id))");
		queryService.execute(sql="INSERT INTO users (userName, dob, houseNum, postCode, street, city) VALUES('John Doe', '09/04/1988',10, 7900, '64 Ave', 'New York')");
		queryService.execute(sql="INSERT INTO users (userName, dob, houseNum, postCode, street, city) VALUES('Jane Doe', '10/05/1990',11, 7900, '65 Ave', 'Los Angeles')");
		queryService.execute(sql="INSERT INTO users (userName, dob, houseNum, postCode, street, city) VALUES('Katy Doe', '11/06/1980',12, 7900, '66 Ave', 'Seatle')");
		queryService.execute(sql="INSERT INTO users (userName, dob, houseNum, postCode, street, city) VALUES('Sven Doe', '12/08/1985',13, 7900, '67 Ave', 'Portland')");

        return this;
    }

	function get(string userName, string dob, numeric houseNum, numeric postCode) {
        var user = variables.beanFactory.getBean("userBean");

		queryService = new query();
		queryService.setName("getUsers");
		queryService.setcachedwithin(CreateTimeSpan(0, 6, 0, 0));
		queryService.addParam(name="userName",value=userName,cfsqltype="cf_sql_varchar");
		queryService.addParam(name="dob",value=dob,cfsqltype="cf_sql_varchar");
		queryService.addParam(name="houseNum",value=houseNum,cfsqltype="cf_sql_integer");
		queryService.addParam(name="postCode",value=postCode,cfsqltype="cf_sql_integer");
 		result = queryService.execute(sql="SELECT * FROM users WHERE userName = :userName AND dob = :dob AND houseNum = :houseNum AND postCode = :postCode ");

		getUsers = result.getResult();

		if (getUsers.RecordCount GT 0) {
			user.setUserName(getUsers["userName"][1]);
			user.setDob(getUsers["dob"][1]);
			user.setHouseNum(getUsers["houseNum"][1]);
			user.setPostCode(getUsers["postCode"][1]);
			user.setStreet(getUsers["street"][1]);
			user.setCity(getUsers["city"][1]);
		}

        return user;
    }

}